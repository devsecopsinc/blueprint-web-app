version: '2.2'

services:
  frontend:
    image: node:18-alpine
    container_name: blueprint-frontend
    volumes:
      - ./.deploy/nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./.deploy/nginx/cloudflare_ssl.crt:/etc/nginx/cloudflare_ssl.crt
      - ./.deploy/nginx/cloudflare_ssl.key:/etc/nginx/cloudflare_ssl.key
      - ./client:/home/node/app:cached
    environment:
      VITE_HASURA_GRAPHQL_API_ENDPOINT: "http://graphql:3001/v1/graphql"
      VITE_HASURA_GRAPHQL_ADMIN_SECRET: $HASURA_GRAPHQL_ADMIN_SECRET
      VITE_BASE_URL: $BASE_URL
    working_dir: /home/node/app
    entrypoint: []
    command: [ "sh", "-c", "yarn install --ignore-engines && yarn run dev:docker" ]
    ports:
      - "3000:5173"
    depends_on:
      - graphql

  database:
    container_name: blueprint-db
    image: postgres:15.2-alpine
    command: postgres -c listen_addresses='*'
    restart: always
    volumes:
      - ./var/pgdata:/var/lib/postgresql/data:delegated
    environment:
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 10

  graphql:
    container_name: blueprint-graphql
    image: hasura/graphql-engine:v2.22.0.cli-migrations-v3
    ports:
      - "3001:3001"
    depends_on:
      database:
        condition: service_healthy
    restart: always
    working_dir: /tmp/hasura-project
    volumes:
      - ./hasura/seeds:/tmp/hasura-project/seeds:cached
      - ./hasura/seed-reset:/tmp/hasura-project/seed-reset:cached
      # the following two volumes allows to apply migratins and metadata on start of hasura (with image: *.cli-migrations-v2)
      - ./hasura/migrations:/hasura-migrations:cached
      - ./hasura/metadata:/hasura-metadata:cached
    extra_hosts:
      - "backend:host-gateway"
    environment:
      HASURA_GRAPHQL_DATABASE_URL: $HASURA_GRAPHQL_DATABASE_URL
      HASURA_GRAPHQL_SERVER_PORT: "3001"
      HASURA_GRAPHQL_MIGRATIONS_SERVER_PORT: "3001"
      HASURA_GRAPHQL_ENABLED_LOG_TYPES: $HASURA_GRAPHQL_ENABLED_LOG_TYPES
      HASURA_GRAPHQL_ENABLE_CONSOLE: $HASURA_GRAPHQL_ENABLE_CONSOLE
      HASURA_GRAPHQL_ADMIN_SECRET: $HASURA_GRAPHQL_ADMIN_SECRET
      HASURA_GRAPHQL_ENABLE_TELEMETRY: $HASURA_GRAPHQL_ENABLE_TELEMETRY
      HASURA_GRAPHQL_DEV_MODE: $HASURA_GRAPHQL_DEV_MODE
      HASURA_GRAPHQL_UNAUTHORIZED_ROLE: $HASURA_GRAPHQL_UNAUTHORIZED_ROLE
      HASURA_GRAPHQL_V1_BOOLEAN_NULL_COLLAPSE: $HASURA_GRAPHQL_V1_BOOLEAN_NULL_COLLAPSE
      HASURA_GRAPHQL_JWT_SECRET: $HASURA_GRAPHQL_JWT_SECRET

  backend:
    container_name: blueprint-backend
    image: node:16-alpine
    depends_on:
      database:
        condition: service_healthy
    ports:
      - "3003:3003"
    volumes:
      - ./server/dist:/home/node/app/dist:cached
      - ./server/src:/home/node/app/src:cached
      - ./server/static:/home/node/app/static:cached
      - ./server/test:/home/node/app/test:cached
      - ./server/nest-cli.json:/home/node/app/nest-cli.json:cached
      - ./server/nest.config.js:/home/node/app/nest.config.js:cached
      - ./server/package.json:/home/node/app/package.json:cached
      - ./server/tsconfig.build.json:/home/node/app/tsconfig.build.json:cached
      - ./server/tsconfig.json:/home/node/app/tsconfig.json:cached
      - ./server/yarn.lock:/home/node/app/yarn.lock:cached
      - ./var:/home/node/var:cached
    environment:
      ENV: development
      HASURA_GRAPHQL_API_ENDPOINT: "http://graphql:3001/v1/graphql"
      HASURA_ACTIONS_PORT: "3003"
      HASURA_GRAPHQL_ADMIN_SECRET: $HASURA_GRAPHQL_ADMIN_SECRET
      WEBHOOK_JWT_SECRET: $WEBHOOK_JWT_SECRET
      BASE_URL: $BASE_URL
    working_dir: /home/node/app
    entrypoint: []
    command: [ "sh", "-c", "yarn install --ignore-engines && yarn run start:dev" ]
